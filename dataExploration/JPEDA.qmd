---
title: "Prewitt EDA"
format: html
---

# Exploring the IMDb Data {.unnumbered}

```{r}
# use cleaning steps from imdbCleaning.qmd:
# import relevant packages
library(tidyverse)

# load the datasets
title_basics <- read_tsv("../data/title.basics.tsv", na = "\\N", quote = "")
title_ratings <- read_tsv("../data/title.ratings.tsv", na = "\\N", quote = "")

```{r}
# select only movies from the titles 
movies <- title_basics %>%
  filter(titleType == "movie")

# merge the datasets
movie_ratings <- movies %>%
  inner_join(title_ratings, by = "tconst")

# select only relevant columns
imdb_cleaned <- movie_ratings %>%
  select(primaryTitle, averageRating)
```

Research Questions:

-   What are the top 10 highest rated movies?

    ```{r}

    top_10_movies <- imdb_cleaned |>
      arrange(desc(Rating)) |>
      slice_head(n = 10)

    top_10_movies

    ```

-   What are the bottom 10 lowest rated movies?

    ```{r}
    bottom_10_movies <- imdb_cleaned |>
      arrange(Rating) |>
      slice_head(n = 10)

    bottom_10_movies


    ```

-   What is the distribution of scores like (how many films for each score?)?

    ```{r}

    imdb_cleaned |>
      ggplot(aes(x = Rating)) +
      geom_bar(fill = "#69b3a2") +
      labs(
        title = "Distribution of IMDb Movie Ratings",
        x = "Rating",
        y = "Number of Movies"
      ) +
      theme_minimal()
    ```

# Exploring the Letterboxd Data {.unnumbered}
```{r}
# use cleaning steps from letterboxdCleaning.qmd:
# import relevant packages
library(tidyverse)

# import data
letterboxd_data <- read_csv("..\\data\\letterboxd_250movie_reviews.csv")

letterboxd_convertStars <-letterboxd_data |>
  mutate(numerical_rating = fct_recode(Rating, "5" = "★★★★★",
                                       "4.5" = "★★★★½", 
                                        "4" = "★★★★",
                                       "3.5" = "★★★½",
                                        "3" = "★★★",
                                        "2.5" = "★★½", 
                                        "2" = "★★",
                                       "1.5" =  "★½",
                                        "1" = "★",
                                       ".5" = "½"))

letterboxd_clean <- letterboxd_convertStars |>
  filter(!is.na(numerical_rating)) |>
  mutate(
    numerical_rating = as.numeric(as.character(numerical_rating)),
    out_of_ten = numerical_rating *2) |>
  group_by(Movie) |>
  summarise(
    avg_rating = mean(out_of_ten, na.rm = TRUE),
  ) |> 
arrange(desc(avg_rating))

```


