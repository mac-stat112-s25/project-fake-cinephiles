---
title: "Combining the Letterboxd and IMDb Datasets"
format: html
---

# Import datasets and clean them using steps established in cleaning files {.unnumbered}
```{r}
library(tidyverse)
library(stringr)
library(fuzzyjoin)

# Load the newly cleaned IMDb dataset
imdb_cleaned <- read_csv("../data/cleaned_imdb.csv")

# lowercase the imdb titles
imdb_lower <- imdb_cleaned |>
  mutate(Title = str_to_lower(Title))

# --------------------------------------------------------------------

# Import the Letterboxd dataset
letterboxd_data <- read_csv("..\\data\\letterboxd_250movie_reviews.csv")

letterboxd_convertStars <-letterboxd_data |>
  mutate(numerical_rating = fct_recode(Rating, "5" = "★★★★★",
                                       "4.5" = "★★★★½", 
                                        "4" = "★★★★",
                                       "3.5" = "★★★½",
                                        "3" = "★★★",
                                        "2.5" = "★★½", 
                                        "2" = "★★",
                                       "1.5" =  "★½",
                                        "1" = "★",
                                       ".5" = "½"))

#select only movie title and rating categories, and update the review to a 1-10 scale instead of 1-5, make movie titles spaced out and not dashes
letterboxd_clean <- letterboxd_convertStars |>
  filter(!is.na(numerical_rating)) |>
  mutate(
    numerical_rating = as.numeric(as.character(numerical_rating)),
    out_of_ten = numerical_rating *2) |>
  group_by(Movie) |>
  summarise(
    avg_rating = mean(out_of_ten, na.rm = TRUE),
  ) |> 
arrange(desc(avg_rating)) |>
  mutate(movie_titles = str_replace_all(Movie, "-", " ")) |>
  select(movie_titles, avg_rating)

```
# Merge Files {.unnumbered}

```{r}

# Merge Letterboxd and IMDb data
final_merged <- letterboxd_clean |>
  rename(Title = movie_titles, letterboxd_score = avg_rating) |>
  left_join(imdb_lower, by = "Title") |>
  rename(imdb_score = Rating)

# -------------------- Checks ----------------------------------

# How many rows matched
nrow(final_merged)

# How many are missing IMDb scores
sum(is.na(final_merged$imdb_score))

# Check how many matches exist between IMDb and the rest of the data
sum(!is.na(final_merged$imdb_score))

# Preview of the merged data
head(final_merged)
```





